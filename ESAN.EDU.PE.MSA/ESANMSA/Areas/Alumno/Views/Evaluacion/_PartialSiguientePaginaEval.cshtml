@using ESAN.Componentes.CoreEvaluacion.Models.General.EvaluacionMSA

<script type="text/javascript">
    $(document).ready(function () {
        $(".btnOpc").on("click", function () {
            $($(this).parent()).find('a').each(function () {
                $(this).removeClass("btn-primary");
                $(this).addClass("btn-default");
            });
            $(this).addClass("btn-primary");

            $.post(URL_PAGE + "Alumno/Evaluacion/agregarRespuestas", { idMedicion: $("#hddIdMedicion").val(), idPromocion: $("#hddIdPromocion").val(), idEvaluado: $("#hddIdEvaluado").val(), Externo: $("#hddExterno").val(), idAlternativa: $(this).attr("data-idAlternativa"), idPregunta: $(this).attr("data-idPregunta") },
                function (result) {
                    $("#AvanceEvaluacion").html("");
                    $("#AvanceEvaluacion").html(result);
                }
            );
        });
        $(".btnSiguiente").on("click", function () {
            var PregContestadas = 0;
            $("#divEvaluacion a").each(function (index) {
                if ($(this).hasClass("btn-primary")) {
                    PregContestadas++;
                }
            });
            if (PregContestadas < parseInt($("#hddCantPreguntasForm").val())) {
                BootstrapDialog.show({
                    type: BootstrapDialog.TYPE_DANGER,
                    title: "Evaluación",
                    message: "Por favor conteste todas las preguntas."
                });
                return false;
            } else {
                waitingDialog.show('Cargando', { dialogSize: 'sm', progressType: 'danger' });
                $.ajax({
                    type: "POST",
                    url: URL_PAGE + "Alumno/Evaluacion/siguientePaginaEvaluacion",
                    cache: false,
                    data: {
                        idNivelA: $("#hddIdNivelA").val(),
                        idNivelOrdenA: $("#hddIdNivelOrdenA").val(),
                        idNivelOrdenB: $("#hddIdNivelOrdenB").val(),
                        idNivelOrdenC: $("#hddIdNivelOrdenC").val(),
                        Externo: $("#hddExterno").val()
                    },
                    success: function (data) {
                        waitingDialog.hide();
                        $("#divEvaluacion").html("");
                        $("#divEvaluacion").html(data);
                        $('body, html').animate({
                            scrollTop: '0px'
                        }, 300);
                        $.post(URL_PAGE + "Alumno/Evaluacion/alternativasNivel", { idNivel: $("#hddIdNivelA").val() },
                         function (result) {
                             $("#Alternativas").html("");
                             $("#Alternativas").html(result);
                         });
                    }
                });
            }
        });
        $(".btnAnterior").on("click", function () {
            waitingDialog.show('Cargando', { dialogSize: 'sm', progressType: 'danger' });
            $.ajax({
                type: "POST",
                url: URL_PAGE + "Alumno/Evaluacion/anteriorPaginaEvaluacion",
                cache: false,
                data: {
                    idNivelA: $("#hddIdNivelA").val(),
                    idNivelOrdenA: $("#hddIdNivelOrdenA").val(),
                    idNivelOrdenB: $("#hddIdNivelOrdenB").val(),
                    idNivelOrdenC: $("#hddIdNivelOrdenC").val(),
                    cntPregForm: $("#hddCantPreguntasForm").val(),
                    Externo: $("#hddExterno").val()
                },
                success: function (data) {
                    waitingDialog.hide();
                    $("#divEvaluacion").html("");
                    $("#divEvaluacion").html(data);
                    $('body, html').animate({
                        scrollTop: '0px'
                    }, 300);
                    $.post(URL_PAGE + "Alumno/Evaluacion/alternativasNivel", { idNivel: $("#hddIdNivelA").val() },
                     function (result) {
                         $("#Alternativas").html("");
                         $("#Alternativas").html(result);
                     });
                }
            });
        });
        $(".btnFinalizar").on("click", function () {
            var PregContestadas = 0;
            $("#divEvaluacion a").each(function (index) {
                if ($(this).hasClass("btn-primary")) {
                    PregContestadas++;
                }
            });
            if (PregContestadas < parseInt($("#hddCantPreguntasForm").val())) {
                BootstrapDialog.show({
                    type: BootstrapDialog.TYPE_DANGER,
                    title: "Evaluación",
                    message: "Por favor conteste todas las preguntas."
                });
                return false;
            } else {
                waitingDialog.show('Cargando', { dialogSize: 'sm', progressType: 'danger' });
                $.ajax({
                    type: "POST",
                    url: URL_PAGE + "Alumno/Evaluacion/finalizarEvaluacion",
                    cache: false,
                    success: function (data) {                       
                        $("#frmEvaluacion").html("");
                        $("#frmEvaluacion").html(data);
                        waitingDialog.hide();
                    }
                });
            }
        });
    });
</script>
<div id="divEvaluacion">
    <input type="hidden" value="@ViewBag.IDNivelA" id="hddIdNivelA" />
    <input type="hidden" value="@ViewBag.IDNivelOrdenA" id="hddIdNivelOrdenA" />
    <input type="hidden" value="@ViewBag.IDNivelOrdenB" id="hddIdNivelOrdenB" />
    <input type="hidden" value="@ViewBag.IDNivelOrdenC" id="hddIdNivelOrdenC" />
@if (ViewBag.objIntroduccion == null)
{
    List<EvaluacionPregunta> lstPreguntas = (List<EvaluacionPregunta>)ViewBag.LstPreguntas;
    List<EvaluacionRespuesta> lstEvaluacionRespuesta = (List<EvaluacionRespuesta>)ViewBag.LstRespuestas;
    EvaluacionRespuesta objRpta = null;
    List<EvaluacionAlternativa> lstAlternativaInversa = null;
    EvaluacionAlternativa objAlternativaInversa = null;
    int cntPreguntasForm = lstPreguntas.Count;
    <!--Hiddens para la paginación de las preguntas.-->
    <input type="hidden" value="@cntPreguntasForm" id="hddCantPreguntasForm" />
    <h2>@ViewBag.NivelA</h2>
    if (ViewBag.NivelB != "")
    {
        <h4>@ViewBag.NivelB.</h4>
        if (ViewBag.DefNivelB != null)
        {
            if (ViewBag.DefNivelB != "")
            {
                string[] Definicion = ((string)ViewBag.DefNivelB).Split('|');
                <h4 class="txtDefinicion">
                    @Definicion[0].ToString()
                    <br /><br />@Definicion[1].ToString()
                </h4>
            }
        }
    }
    <div class="jumbotron" style="padding: 5px 25px 5px 25px;">
            @if (ViewBag.NivelC != "")
            {
                <h4>@ViewBag.NivelC</h4>
                if (ViewBag.DefNivelC != null)
                {
                    if (ViewBag.DefNivelC != "")
                    {
                        string[] Definicion = ((string)ViewBag.DefNivelC).Split('|');
                        <h4 class="txtDefinicion">
                            @Definicion[0].ToString()
                            <br /><br />  @Definicion[1].ToString()
                        </h4>
                    }
                }
            }<br />
            @foreach (var objPregunta in lstPreguntas)
            {
                objRpta = lstEvaluacionRespuesta.Where(q => q.EvaluacionAlternativa.EvaluacionPreguntaID == objPregunta.EvaluacionPreguntaID).FirstOrDefault();
                lstAlternativaInversa = objPregunta.EvaluacionAlternativa.OrderByDescending(q => q.EvaluacionAlternativaDescripcion).ToList();
                if ((bool)ViewBag.EsExterno)
                {
                    <span class="txtPregunta">@objPregunta.EvaluacionPreguntaPares</span>
                }
                else
                {
                    <span class="txtPregunta">@objPregunta.EvaluacionPreguntaDescripcion</span>
                }
                <div class="btn-group btn-group-justified" role="group" aria-label="Justified button group">
                    @foreach (var objAlternativa in objPregunta.EvaluacionAlternativa)
                    {
                        if (objRpta != null)
                        {
                            if ((bool)objPregunta.EsInversa)
                            {
                                objAlternativaInversa = null;
                                objAlternativaInversa = lstAlternativaInversa.First();
                                if (objRpta.EvaluacionAlternativaID == objAlternativaInversa.EvaluacionAlternativaID)
                                {
                                    <a class="btn btn-primary btnOpc" data-idPregunta="@objPregunta.EvaluacionPreguntaID" data-idAlternativa="@objAlternativaInversa.EvaluacionAlternativaID" role="button">@objAlternativa.EvaluacionAlternativaDescripcion</a>
                                }
                                else
                                {
                                    <a class="btn btn-default btnOpc" data-idPregunta="@objPregunta.EvaluacionPreguntaID" data-idAlternativa="@objAlternativaInversa.EvaluacionAlternativaID" role="button">@objAlternativa.EvaluacionAlternativaDescripcion</a>
                                }
                                lstAlternativaInversa.Remove(objAlternativaInversa);
                            }
                            else
                            {
                                if (objRpta.EvaluacionAlternativaID == objAlternativa.EvaluacionAlternativaID)
                                {
                                    <a class="btn btn-primary btnOpc" data-idPregunta="@objPregunta.EvaluacionPreguntaID" data-idAlternativa="@objAlternativa.EvaluacionAlternativaID" role="button">@objAlternativa.EvaluacionAlternativaDescripcion</a>
                                }
                                else
                                {
                                    <a class="btn btn-default btnOpc" data-idPregunta="@objPregunta.EvaluacionPreguntaID" data-idAlternativa="@objAlternativa.EvaluacionAlternativaID" role="button">@objAlternativa.EvaluacionAlternativaDescripcion</a>
                                }
                            }
                        }
                        else
                        {
                            if ((bool)objPregunta.EsInversa)
                            {
                                objAlternativaInversa = null;
                                objAlternativaInversa = lstAlternativaInversa.First();
                                <a class="btn btn-default btnOpc" data-idPregunta="@objPregunta.EvaluacionPreguntaID" data-idAlternativa="@objAlternativaInversa.EvaluacionAlternativaID" role="button">@objAlternativa.EvaluacionAlternativaDescripcion</a>
                                lstAlternativaInversa.Remove(objAlternativaInversa);
                            }
                            else
                            {
                                <a class="btn btn-default btnOpc" data-idPregunta="@objPregunta.EvaluacionPreguntaID" data-idAlternativa="@objAlternativa.EvaluacionAlternativaID" role="button">@objAlternativa.EvaluacionAlternativaDescripcion</a>
                            }

                        }
                    }
                </div>
                <br />
            }
        </div>

}
else
{
    bool EsExterno = (bool)ViewBag.EsExterno;
    EvaluacionNivelIntro objNivelIntroduccion = (EvaluacionNivelIntro)ViewBag.objIntroduccion;
    <input type="hidden" value="0" id="hddCantPreguntasForm" />
    <h2>@ViewBag.NivelA</h2>
        <div class="jumbotron" style="padding: 5px 25px 5px 25px;">     
            @if (objNivelIntroduccion.ParrafoIntroduccionPar1 != null && objNivelIntroduccion.ParrafoIntroduccion1 != null)
            {
                <p style="font-size: 16px;">@Html.Raw(EsExterno ? objNivelIntroduccion.ParrafoIntroduccionPar1 : objNivelIntroduccion.ParrafoIntroduccion1)</p>
            }            
            @if (objNivelIntroduccion.ListaIntroduccion1 != null && objNivelIntroduccion.ListaIntroduccionPar1 != null)
            {
                if (objNivelIntroduccion.ListaIntroduccion1 != "" && objNivelIntroduccion.ListaIntroduccionPar1 != "")
                {
                    <ul type="1">
                        @{string[] lstIntroA = EsExterno ? objNivelIntroduccion.ListaIntroduccionPar1.Split('|') : objNivelIntroduccion.ListaIntroduccion1.Split('|');
                            foreach (string item in lstIntroA){
                                <li class="txtLista">@item</li>
                            }
                        }
                    </ul>
                }
            }
             @if (objNivelIntroduccion.ParrafoIntroduccionPar2 != null && objNivelIntroduccion.ParrafoIntroduccion2 != null)
             {           
                 <p style="font-size: 16px;">@Html.Raw(EsExterno ? objNivelIntroduccion.ParrafoIntroduccionPar2 : objNivelIntroduccion.ParrafoIntroduccion2)</p>
             }            
            @if (objNivelIntroduccion.ListaIntroduccion2 != null && objNivelIntroduccion.ListaIntroduccionPar2 != null)
            {
                if (objNivelIntroduccion.ListaIntroduccion2 != "" && objNivelIntroduccion.ListaIntroduccionPar2 != "")
                {
                    <ul type="1">
                    @{
                        string[] lstIntroB = EsExterno ? objNivelIntroduccion.ListaIntroduccionPar2.Split('|') : objNivelIntroduccion.ListaIntroduccion2.Split('|');
                        foreach (string item in lstIntroB)
                        {
                            <li class="txtLista">@item</li>
                        }
                    }
                    </ul>
                }
            }            
            @{
                if (objNivelIntroduccion.ParrafoIntroduccion3 != null && objNivelIntroduccion.ParrafoIntroduccionPar3 != null)
                {
                    if (objNivelIntroduccion.ParrafoIntroduccion3 != "" && objNivelIntroduccion.ParrafoIntroduccionPar3 != "")
                    {
                        string[] lstParrafoC = EsExterno ? objNivelIntroduccion.ParrafoIntroduccionPar3.Split('|') : objNivelIntroduccion.ParrafoIntroduccion3.Split('|');
                        foreach (string item in lstParrafoC)
                        {
                            <p style="font-size: 16px;">@item</p>
                        }
                    }
                }
            }
            <div class="row">
                <div class="btn-group btn-group-justified" role="group" aria-label="Justified button group">
                    @{
                        string[] lstAlternativas = objNivelIntroduccion.ListaAlternativas.Split('|');
                        int valor = 0;
                        foreach (string alter in lstAlternativas)
                        {
                            valor++;
                            <a class="btn btn-default" style="font-size: 12px; padding-left: 1px; padding-right: 1px;" role="button"><span class="badge">@valor</span></a>
                        }
                    }
                </div>
            </div>
        </div>
}
    <div class="row">
        <div class="col-md-4 col-xs-4">
            <div class="form-group">
                @if ((bool)ViewBag.AnteriorPagEvaluacion)
                {
                    <button type="button" class="btn btn-success btnAnterior">Anterior</button>
                }
            </div>
        </div>
        <div class="col-md-4 col-xs-4">
        </div>
        <div class="col-md-4 col-xs-4 text-right">
            @if ((bool)ViewBag.FinalizarEvaluacion)
            {
                <div class="form-group">
                    <button type="button" class="btn btn-success btnFinalizar">Finalizar</button>
                </div>
            }
            else
            {
                <div class="form-group">
                    <button type="button" class="btn btn-success btnSiguiente">Siguiente</button>
                </div>
            }
        </div>
    </div>
</div>

